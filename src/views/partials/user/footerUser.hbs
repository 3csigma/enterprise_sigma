<!-- ****************** Required JS - DASHBOARD ****************** -->
<script src="../vendor/js/Chart.bundle.min.js"></script>
<script src="../vendor/js/owl.carousel.js"></script>

{{> modals/modalAcuerdoConfidencial}}

{{#if jsonDim_empresa}}
{{> user/pieCharts}}
{{/if}}

<script>
	function acuerdoChecked() {
		// Acción al aceptar el acuerdo de confidencialidad
		const acuerdoCheck = document.getElementById('acuerdo-check').checked
		console.log("Acuerdo Check: " + acuerdoCheck)
		if (acuerdoCheck) {
			console.log("Acuerdo aceptado, serás redireccionado..")
			fetch('/acuerdo-de-confidencialidad', {
				method: 'POST',
				body: JSON.stringify({estado:2}),
				headers: {'Content-Type': 'application/json'}
			}).then(res => res.json())
				.catch(error => console.error('Error:', error))
				.then(response => {
					console.log("RESPUESTA DE ACUERDO CHECK CONTROLLER >> ", response)
					if (response.ok){
						window.location.href = response.txt
					} else {
						Swal.fire(
							'Error!',
							'Ocurrió algo inesperado al aceptar el acuerdo de confidencialidad',
							'error'
						)
					}
				});
		}
	}

	function msgSinConsultor() {
		Swal.fire(
			'Atención',
			'Tu consultor no ha sido asignado. Recibiras una notificación a tu correo y podras ingresar',
			'info'
		)
	}

	{{#if archivos}}
	function cargarArchivos_Empresa(tabla, idArchivo) {
		const idEmpresa = document.getElementById("idEmpresa").value;
		const inputArchivo = document.getElementById("inputArchivo"+idArchivo);
		if (inputArchivo) {
			const estado = document.getElementById("spanEstado"+idArchivo);
			const btnArchivo = document.getElementById("btnVer"+idArchivo);
			inputArchivo.addEventListener('change', (e) => {
				const file = e.target.files[0]
				console.log(file)
				let ruta = '/guardar-archivos-analisis', etapa = 2
				if (tabla == 'archivos_empresarial') { etapa= 3; ruta = '/guardar-archivos-empresariales' }
				else if (tabla == 'archivos_estrategico') { etapa = 4; ruta = '/guardar-archivos-estrategico' }

				const formData = new FormData();
				formData.append('id', idArchivo);
				formData.append('empresa', idEmpresa);
				formData.append('file', file);
				formData.append('etapa', etapa);
				formData.append('tabla', tabla);

				fetch(ruta, {
					method: 'POST',
					body: formData,
				})
					.then(res => res.json())
					.catch(error => console.error('Error:', error))
					.then(response => {
						if (response.ok) {
							toastr.success("El archivo ha sido cargado exitosamente", "Atención", {
								positionClass: "toast-top-center",
								timeOut: 5e3,
								closeButton: !0,
								debug: !1,
								newestOnTop: !0,
								progressBar: !0,
								preventDuplicates: !0,
								onclick: null,
								showDuration: "300",
								hideDuration: "1000",
								extendedTimeOut: "1000",
								showEasing: "swing",
								hideEasing: "linear",
								showMethod: "fadeIn",
								hideMethod: "fadeOut",
								tapToDismiss: !1
							})

							btnArchivo.style.display = 'block'
							btnArchivo.href = response.url
							estado.classList.remove("badge-warning")
							estado.classList.add("badge-success")
							estado.innerHTML = "Cargado"
							
						} else {
							toastr.warning("No sé pudo subir el archivo, contacte a soporte", "Error", {
								positionClass: "toast-top-center",
								timeOut: 5e3,
								closeButton: !0,
								debug: !1,
								newestOnTop: !0,
								progressBar: !0,
								preventDuplicates: !0,
								onclick: null,
								showDuration: "300",
								hideDuration: "1000",
								extendedTimeOut: "1000",
								showEasing: "swing",
								hideEasing: "linear",
								showMethod: "fadeIn",
								hideMethod: "fadeOut",
								tapToDismiss: !1
							})
						}
					});
			});
		}
	}
	{{/if}}

    (function ($) {

        const dzGraficasEmpresa = function (indicadores) {
			const coloresDim = ['#812082', '#f2f2f2'];
            /** GRÁFICA PARA INDICADORES */
			const chartIndicadores1 = (indicadores, nuevosProyectos) => {
				let dataAreasVitales1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                let dataAreasVitales2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
				let label1 = 'Valor'
				
                const areasVitales = indicadores.areasVitales1
                dataAreasVitales1 = [areasVitales.producto, areasVitales.administracion, areasVitales.talento_humano, areasVitales.finanzas, areasVitales.servicio_cliente, areasVitales.operaciones, areasVitales.ambiente_laboral, areasVitales.innovacion, areasVitales.marketing, areasVitales.ventas]

                /*
				const areasVitales2 = indicadores.areasVitales2
				if (areasVitales2) {
					label1 = 'Análisis anterior'
                	dataAreasVitales2 = [areasVitales2.producto, areasVitales2.administracion, areasVitales2.talento_humano, areasVitales2.finanzas, areasVitales2.servicio_cliente, areasVitales2.operaciones, areasVitales2.ambiente_laboral, areasVitales2.innovacion, areasVitales2.marketing, areasVitales2.ventas]
				}
				*/

                let valorMax = 10;
                if (nuevosProyectos == 1) {
                    valorMax = 5;
                }

				if ($('#chartEmpresa1').length > 0) {
					const chartEmpresaAdm1 = document.getElementById("chartEmpresa1").getContext('2d')

					chartEmpresaAdm1.height = 100;
					new Chart(chartEmpresaAdm1, {
						type: 'bar',
						data: {
							defaultFontFamily: 'Oblivian',
							labels: ["Producto", "Admin", "Talento Humano", "Finanzas", "S. Al cliente", "Operaciones", "A. Laboral", "Innovación", "Marketing", "Ventas"],
							datasets: [
								{
									label: label1,
									backgroundColor: "#50368C",
									borderColor: "#50368C",
									data: dataAreasVitales1,
									fill: false,
								},
								/*	
								{
									label: "Último análisis",
									fill: false,
									backgroundColor: "#FED061",
									borderColor: "#FED061",
									data: dataAreasVitales2,
								}
								*/
							]
						},
						options: {
							legend: false,
							scales: {
								yAxes: [{
									gridLines: {
										display: true
									},
									ticks: {
										beginAtZero: true,
										min: 0, // minimum value
										max: valorMax // maximum value
									}
								}],
								xAxes: [{
									gridLines: {
										display: false
									},
									ticks: {
										fontSize: 10
									},
									//barPercentage: 0.5,
									//categoryPercentage: 1,
									//barThickness: 14,
									//maxBarThickness: 10,
									barPercentage: 4,
                                    categoryPercentage: 4,
                                    barThickness: 28,
                                    maxBarThickness: 25,
								}]
							}
						}
					});
				}
			}

			const chartIndicadores2 = (indicadores, nuevosProyectos) => {
				let chartDimensiones1 = [0, 0, 0, 0]
                let chartDimensiones2 = [0, 0, 0, 0]
                let titulos = ["Producto", "Administración", "Operaciones", "Marketing"];
				let label1 = 'Valor', label2 = 'Valor'

                const pe_cliente1 = indicadores.dimensiones1
                const pe_estadistica1 = indicadores.pe1;
				
				chartDimensiones1 = [pe_cliente1.producto, pe_cliente1.administracion, pe_cliente1.operaciones, pe_cliente1.marketing]

				// PERCEPCIÓN ESTADÍSTICA
				if (pe_estadistica1) {
					chartDimensiones2 = [pe_estadistica1.producto, pe_estadistica1.administracion, pe_estadistica1.operaciones, pe_estadistica1.marketing]
				}

				if (nuevosProyectos == 1) {
					titulos = ["Experiencia en el Rubro", "Mentalidad Empresarial", "Viabilidad del Negocio", "Estructura del Negocio"]
					chartDimensiones1 = [pe_cliente1.experiencia_rubro, pe_cliente1.mentalidad, pe_cliente1.viabilidad_, pe_cliente1.estructura]
				}

				if ($('#chartEmpresa2').length > 0) {
					const chartEmpresaAdm2 = document.getElementById("chartEmpresa2").getContext('2d')
					chartEmpresaAdm2.height = 100;
					new Chart(chartEmpresaAdm2, {
						type: 'bar',
						data: {
							defaultFontFamily: 'Oblivian',
							labels: titulos,
							datasets: [
								{
									label: label1,
									backgroundColor: "#50368C",
									borderColor: "#50368C",
									data: chartDimensiones1,
									fill: false,
								},
								// PERCEPCIÓN ESTADÍSTICA
								{
									label: label2,
									fill: false,
									backgroundColor: "#FED061",
									borderColor: "#FED061",
									data: chartDimensiones2,
								}
							]
						},
						options: {
							legend: false,
							scales: {
								yAxes: [{
									gridLines: {
										display: true
									},
									ticks: {
										beginAtZero: true,
										min: 0, // minimum value
										//max: 10 // maximum value
									}
								}],
								xAxes: [{
									gridLines: {
										display: false
									},
									ticks: {
										fontSize: 10
									},
									//barPercentage: 0.5,
									//categoryPercentage: 1,
									//barThickness: 14,
									//maxBarThickness: 10,
									barPercentage: 4,
                                    categoryPercentage: 4,
                                    barThickness: 28,
                                    maxBarThickness: 25,
								}]
							}
						}
					});
				}
			}

			return {
                load: function (data, empresaNueva) {
					chartIndicadores1(data, empresaNueva);
					chartIndicadores2(data, empresaNueva);
                },
            }

        }();

        jQuery(document).ready(function () {
			// PROPIEDAD PARA MODIFICAR SCROLL AL ABRIR O CERRAR EL SIDEBAR DE TAREAS
			$(".chatbox-close").on("click", () => {
                $('#cuerpoGeneral').css('overflow-y', 'auto')
			})
        });

        jQuery(window).on('load', function () {
			if (document.getElementById('jsonIndicadores')) {
				let data = document.getElementById('jsonIndicadores').value
				data = JSON.parse(data)
				const nuevosProyectos = document.getElementById('nuevosProyectos').value;
				dzGraficasEmpresa.load(data, nuevosProyectos);
			}
        });

    })(jQuery);

</script>