<!--**********************************
        Content body start
***********************************-->
<div class="content-body">
    <!-- row -->
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-12 col-xxl-12">
                <div class="card ">
                    {{!-- <div class="card-header">
                        <h4 class="card-title">Form step</h4>
                    </div> --}}
                    <div class="card-body">
                        <div id="ssmartwizard" class="form-wizard order-create sw sw-theme-default sw-justified">
                            <ul class="nav nav-wizard">
                                <li><a class="nav-link inactive active" href="#infoModulo">
                                        <span style="margin-top: 22px;">1</span>
                                        <label class="pasos">Información del módulo</label>
                                    </a>
                                </li>
                                <li><a class="nav-link inactive done" href="#temario">
                                        <span style="margin-top: 22px;">2</span>
                                        <label class="pasos">Temario</label>
                                    </a></li>
                                <li><a class="nav-link inactive" href="#guardar">
                                        <span style="margin-top: 22px;">3</span>
                                        <label class="pasos">Publicar/Guardar</label>
                                    </a>
                                </li>
                            </ul>
                            <div class="tab-content" style="height: 344px;">
                                <div id="infoModulo" class="tab-pane" role="tabpanel" style="display: block;">
                                    <div class="row">
                                        <div class="col-lg-8 mb-2">
                                            <div class="form-group">
                                                <label class="text-label">Nombre del módulo*</label>
                                                <input type="text" id="modulo" class="form-control" style="border: 1px solid #DBDBDB;" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-8 mb-2">
                                            <div class="form-group">
                                                <label class="text-label">Insignia del módulo*</label>
                                                <input type="file" id="insignia" name="file" class="form-control" style="border: 1px solid #DBDBDB;" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6 mb-2">
                                            <div class="form-group">
                                                <label class="text-label">Categoria*</label>
                                                <select id="categoriaSelectModulo" class="sltBuscar form-control input-recursos chosen-container chosen-container-single required">
                                                    <option value="N/A">Escoge curso...</option>
                                                    {{#each categorias}}
                                                    <option value="{{this}}">{{this}}</option>
                                                    {{/each}}
                                                </select>
                                                 <input type="hidden" id="categoriaHiddenModulo" name="categoria">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-8 mb-2">
                                            <div class="form-group">
                                                <h3 style="font-weight: 500;font-size: 17px;color: #000000;">Programa(s) destino</h3>
                                                <div class="form-group">
                                                    <div class="form-check form-check-inline">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input programa" value="1" checked="">Free Trial
                                                        </label>
                                                    </div>
                                                    <div class="form-check form-check-inline">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input programa" value="2">Entrepreneur
                                                        </label>
                                                    </div>
                                                    <div class="form-check form-check-inline">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input programa" value="3">Business
                                                        </label>
                                                    </div>
                                                    <div class="form-check form-check-inline">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input programa" value="4">Enterprise
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="display: grid;">
                                        <div class="col-6">
                                            <label class="text-label">Thumbnail*</label>
                                            <div class="drag-area file-thumbnail file-leccion" ondragover="dragOverHandler(event)" ondragleave="dragLeaveHandler(event)" ondrop="dropHandler(event)">
                                                <center>
                                                    <button id="btnThumbnail" onclick="btnFile_(event, this.parentNode)" style="border: 1px solid #ffffff00;background: #f0f8ff00;background-repeat: round;">
                                                        <img src="../img/thumbnail.svg" alt="" style="width: 121px; margin-top: -37px;">
                                                    </button>
                                                    <input type="file" name="file" class="fileThumbnail_" id="fileThumbnail" onchange="fileChange_(event, event.target)" hidden accept=".jpg, .jpeg, .png, .gif, .tiff">
                                                </center>
                                                <h6 class="fw-700 text-black">Escoge o <span style="color:#812082;font-weight: 700;font-size: 14px;">arrastra </span>un archivo</h6>
                                            </div>
                                        </div>
                                        <div id="msgFile-thumbnail"></div>
                                    </div>
                                </div>
                                <div id="temario" class="tab-pane" role="tabpanel" style="display: none;">
                                    <div class="row">
									    <div class="col-lg-12">
                                            <div class="card-body">
                                                <div id="accordion-two" class="accordion accordion-danger-solid">
                                                    <div class="accordion__item">
                                                        <div class="accordion__header" data-toggle="collapse" data-target="#bordered_collapseOne"> <span class="accordion__header--text">Accordion Header One</span>
                                                            <span class="accordion__header--indicator"></span>
                                                        </div>
                                                        <div id="bordered_collapseOne" class="collapse accordion__body show" data-parent="#accordion-two">
                                                            <div class="accordion__body--text">
                                                                <div class="row">
                                                                    <div class="col-lg-8 mb-2">
                                                                        <div class="form-group">
                                                                            <label class="text-label">Nombre de la lección*</label>
                                                                            <input type="text" id="leccion_0" class="form-control" style="border: 1px solid #DBDBDB;" required>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row" style="display: grid;">
                                                                    <div class="col-6">
                                                                        <label class="text-label">Video de la lección*</label>
                                                                        <div class="drag-area file-videoleccion file-leccion" ondragover="dragOverHandler(event)" ondragleave="dragLeaveHandler(event)" ondrop="dropHandler(event)">
                                                                            <center>
                                                                               <button id="btnvideoleccion" onclick="btnFile_(event, this.parentNode)" style="border: 1px solid #ffffff00;background: #f0f8ff00;background-repeat: round;">
                                                                                    <img src="../img/thumbnail.svg" alt="" style="width: 121px; margin-top: -37px;">
                                                                                </button>
                                                                                <input type="file" class="fileVideo_" id="video_0" onchange="fileChange_(event, event.target)" hidden accept=".mov, .mp4, .avi, .mkv">
                                                                            </center>
                                                                            <h6 class="fw-700 text-black">Escoge o <span style="color:#812082;font-weight: 700;font-size: 14px;">arrastra </span>un archivo</h6>
                                                                        </div>
                                                                    </div>
                                                                    <div id="msgFile-video" class="col-12"></div>
                                                                </div>
                                                                <!-- Summernote -->
                                                                <div class="row">
                                                                    <div class="col-xl-12 col-xxl-12">
                                                                        <div class="summernote-theme-1">
                                                                            <textarea name="name" class="summernote" id="summernote_0" rows="10"></textarea>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row" style="display: grid;">
                                                                    <div class="col-6">
                                                                        <label class="text-label">Material descargable</label>
                                                                        <div class="drag-area file-material file-leccion" ondragover="dragOverHandler(event)" ondragleave="dragLeaveHandler(event)" ondrop="dropHandler(event)">
                                                                            <center>
                                                                                <button id="btnMaterial" onclick="btnFile_(event, this.parentNode)" style="border: 1px solid #ffffff00;background: #f0f8ff00;background-repeat: round;">
                                                                                    <img src="../img/thumbnail.svg" alt="" style="width: 121px; margin-top: -37px;">
                                                                                </button>
                                                                                <input type="file" class="fileMaterial_" id="material_0" onchange="fileChange_(event, event.target)" hidden>
                                                                            </center>
                                                                            <h6 class="fw-700 text-black">Escoge o <span style="color:#812082;font-weight: 700;font-size: 14px;">arrastra </span>un archivo</h6>
                                                                        </div>
                                                                    </div>
                                                                    <div id="msgFile-material" class="col-12"></div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <br>
                                                        <div id="lessonsContainer"></div> <!-- Contenedor para las lecciones -->
                                                        <button id="addLessonBtn" class="btn color_tertiary text-black" style="border-radius: 7px; border: 1px solid white;border-radius: 7px; margin-left: -23px;border: 1px solid white; padding: 6px 30px;" type="button">+ Nueva lección</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
									</div>
                                </div>
                                <div id="guardar" class="tab-pane" role="tabpanel" style="display: none;">
                                    <div class="row">
                                    </div>
                                </div>
                            </div>
                            <div class="toolbar toolbar-bottom btn-group btn-group-sm" role="toolbar" style="text-align: right;">
                                <button class="btn btn-primary sw-btn-prev" style="display: none; border-radius: 7px;" type="button">Anterior</button>
                                <button class="btn btn-primary sw-btn-next" style="display: none;border-radius: 7px;" type="button">Siguiente</button>
                                <button onclick="addModulo()" class="btn color_secondary sw-btn-guardar text-white" style="display: none;border-radius: 7px; border: 1px solid white;" type="button">Guardar</button>
                                <button onclick="addModulo(1)" class="btn color_tertiary sw-btn-submit text-black" style="display: none;border-radius: 7px; border: 1px solid white;" type="button">Publicar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../js/jquery.js"></script>
{{!-- <script src="../js/modulos/fileValidation_modulos.js"></script> --}}
<script>
// Obtener elementos del DOM
const lessonsContainer = document.getElementById('lessonsContainer');
const addLessonBtn = document.getElementById('addLessonBtn');
let lessonCounter = 1;
// Función para crear el HTML de una nueva lección
const createLessonHTML = () => {
    const lessonHTML = `
    <div class="accordion__item">
      <div class="accordion__header" data-toggle="collapse" data-target="#bordered_collapse_${lessonCounter}">
        <span class="accordion__header--text">Accordion Header ${lessonCounter}</span>
        <span class="accordion__header--indicator"></span>
      </div>
      <div id="bordered_collapse_${lessonCounter}" class="collapse accordion__body show" data-parent="#accordion-two">
        <div class="accordion__body--text">
          <!-- Contenido de la nueva lección -->
          <div class="row">
            <div class="col-lg-8 mb-2">
              <div class="form-group">
                <label class="text-label">Nombre de la lección*</label>
                <input type="text" id="leccion_${lessonCounter}" class="form-control" style="border: 1px solid #DBDBDB;" required>
              </div>
            </div>
          </div>
          <!-- --- -->
          <div class="row" style="display: grid;" id="divRow-${lessonCounter}">
            <div class="col-6">
                <label class="text-label">Video de la lección*</label>
                <div class="drag-area file-videoleccion file-leccion" ondragover="dragOverHandler(event)" ondragleave="dragLeaveHandler(event)" ondrop="dropHandler(event)">
                    <center>
                        <button id="btnvideoleccion_${lessonCounter}" onclick="btnFile_(event, this.parentNode)" style="border: 1px solid #ffffff00;background: #f0f8ff00;background-repeat: round;">
                            <img src="../img/thumbnail.svg" alt="" style="width: 121px; margin-top: -37px;">
                        </button>
                        <input type="file" class="fileVideo_" id="video_${lessonCounter}" onchange="fileChange_(event, event.target)" hidden>
                    </center>
                    <h6 class="fw-700 text-black">Escoge o <span style="color:#812082;font-weight: 700;font-size: 14px;">arrastra </span>un archivo</h6>
                </div>
                <div id="msgFile-video-${lessonCounter}" class="col-12"></div>
            </div>
          </div>
          <!-- --- -->
          <!-- Summernote -->
          <div class="row">
            <div class="col-xl-12 col-xxl-12">
              <div class="summernote-theme-1">
                <textarea name="name" class="summernote" id="summernote_${lessonCounter}" rows="10"></textarea>
              </div>
            </div>
          </div>
          <!-- --- -->
          <div class="row" style="display: grid;">
            <div class="col-6">
              <label class="text-label">Material descargable</label>
              <div class="drag-area file-material file-leccion" ondragover="dragOverHandler(event)" ondragleave="dragLeaveHandler(event)" ondrop="dropHandler(event)">
                <center>
                    <button id="btnMaterial_${lessonCounter}" onclick="btnFile_(event, this.parentNode)" style="border: 1px solid #ffffff00;background: #f0f8ff00;background-repeat: round;">
                        <img src="../img/thumbnail.svg" alt="" style="width: 121px; margin-top: -37px;">
                    </button>
                    <input type="file" class="fileMaterial_" id="material_${lessonCounter}" onchange="fileChange_(event, event.target)" hidden>
                </center>
                <h6 class="fw-700 text-black">Escoge o <span style="color:#812082;font-weight: 700;font-size: 14px;">arrastra </span>un archivo</h6>
              </div>
            </div>
            <div id="msgFile-material-${lessonCounter}" class="col-12"></div>
          </div>
          <!-- --- -->
        </div>
      </div>
    </div>
  `;
  return lessonHTML;
};

// Función para manejar el evento de clic en el botón "+ Nueva lección"
const handleAddLesson = () => {
    const lessonHTML = createLessonHTML();
    lessonsContainer.insertAdjacentHTML('beforeend', lessonHTML);

    // Encuentra el elemento de texto Summernote utilizando el ID generado dinámicamente
    const newSummernoteElement = document.getElementById(`summernote_${lessonCounter}`);

    // Inicializa Summernote para el nuevo elemento
    $(newSummernoteElement).summernote({
        height: 190,
        minHeight: null,
        maxHeight: null,
        focus: false
    });
    lessonCounter++;
};

// Asignar el evento de clic al botón "+ Nueva lección"
addLessonBtn.addEventListener('click', handleAddLesson);

async function addModulo(acc) {
    
    const modulo = $("#modulo").val();
    const insigniaInput = document.getElementById("insignia");
    let insignia = insigniaInput.files[0];
    if (insignia) insignia = await convertirImagenABase64(insignia);
    const categoria = $("#categoriaHiddenModulo").val();
    const programa = $(".programa:checked").map(function() {
        return $(this).val();
    }).get();
    let thumbnailInput = document.getElementById("fileThumbnail")
    let thumbnail = thumbnailInput.files[0];
    if (thumbnail) thumbnail = await convertirImagenABase64(thumbnail)
    
    const formData = new FormData();
    formData.append('nombre', modulo);
    formData.append('insignia', insignia);
    formData.append('categoria', categoria);
    formData.append('programa', programa.join(','));
    formData.append('imagen', thumbnail);
    if(acc == 1) formData.append('estado', 1);

    for (let i = 0; i < lessonCounter; i++) {
        const leccion = $(`#leccion_${i}`).val();
        formData.append(`nombre_[]`, leccion);

        const videolInput = document.getElementById(`video_${i}`);
        const video = videolInput.files[0];
        console.log("-----------VIDEO---->" ,video)
        formData.append(`video[]`, video);

        const summernote = $(`#summernote_${i}`).val();
        formData.append(`descripcion[]`, summernote);

        const materialInput = document.getElementById(`material_${i}`);
        const material = materialInput.files[0];
        console.log("--------MATERIAL------->" ,material)
        formData.append(`material[]`, material);
    }
    
    fetch('/add-modulos', {
    method: 'POST',
    body: formData,
    headers: { 'enctype': 'multipart/form-data'}
  })
    .then(response => {
      if (response){
        console.log("se fue")
       // location.reload();
      }
    })
    .catch(error => {
      // Manejo del error
      console.log("Error ==> ", error)
      
    });

}

function convertirImagenABase64(imagen) {
  return new Promise((resolve, reject) => {
    const lector = new FileReader();
    lector.onloadend = function () {
      const imagenBase64 = lector.result;
      // Aquí puedes hacer lo que necesites con la imagen en base64
      resolve(imagenBase64);
    };
    lector.onerror = function () {
      reject(new Error('Error al leer la imagen.'));
    };
    lector.readAsDataURL(imagen);
  });
  
}

/*********************************************************************************************************/
function dragOverHandler(event) {
    event.preventDefault(); // previene el comportamiento por defecto del evento
    event.currentTarget.classList.add("active"); // utiliza currentTarget en lugar de this para asegurarte de que se está agregando la clase al div correcto
    const h6 = event.currentTarget.querySelector("h6"); // utiliza currentTarget en lugar de this para asegurarte de que se está buscando en el div correcto
    h6.textContent = "Suelta para subir el archivo";
    console.log("usando dragover");
}

function dragLeaveHandler(event) {
    event.preventDefault(); // previene el comportamiento por defecto del evento
    event.currentTarget.classList.remove("active"); // utiliza currentTarget en lugar de this para asegurarte de que se está removiendo la clase del div correcto
    const h6 = event.currentTarget.querySelector("h6"); // utiliza currentTarget en lugar de this para asegurarte de que se está buscando en el div correcto
    h6.textContent = "Arrastra y suelta el archivo";
}

function dropHandler(event) {
    event.preventDefault(); // previene el comportamiento por defecto del evento
    const input = event.currentTarget.querySelector("input"); // utiliza currentTarget en lugar de this para asegurarte de que se está buscando en el div correcto
    console.log("ID INPUT:: ", input.id);
    console.log("usando dropArea, clase: " + input.className);
    cargarArchivo(input.files[0], input.className);
    event.currentTarget.classList.remove("active"); // utiliza currentTarget en lugar de this para asegurarte de que se está removiendo la clase del div correcto
    const h6 = event.currentTarget.querySelector("h6"); // utiliza currentTarget en lugar de this para asegurarte de que se está buscando en el div correcto
    h6.textContent = "Arrastra y suelta el archivo";
}

function btnFile_(event, div) {
    event.preventDefault();
    console.log("usando btnFile ==> ", div);
    const input = div.querySelector("input");
    input.click();
}

function fileChange_(event, input) {
    console.log("ID INPUT:: ", input.id);
    console.log("Usando input, clase: " + input.className);
    cargarArchivo(input.files[0], input.className, input.id);
}

function cargarArchivo(file, clase, id = null) {
    // Si el div para el archivo es el de Video
    if ((clase == 'fileThumbnail_' || clase == 'fileMaterial_') && file.size >= 20 * 1024 * 1024) { // Validar el tamaño del video - 20 megabytes
        toastError("El archivo no puede superar los 20MB.")
    } else {
        const ext = file.name.split(".").pop().toLowerCase();
        let fileOk = true, id_Msg = 'msgFile-material-'+(parseInt(lessonCounter-1));
        if (id === 'material') { id_Msg = 'msgFile-material' }
        if (id === 'material_0') { id_Msg = 'msgFile-material' }
        // Validando el tipo de archivo
        if (clase == 'fileThumbnail_') {
            const extensiones = ["jpg", "jpeg", "png", "svg", "psd", "ai", "tiff"];
            id_Msg = 'msgFile-thumbnail'
            // Si el archivo no es una imagen
            if (!extensiones.includes(ext)) {
                fileOk = false;
                toastError("Solo se admiten imagenes, intentelo nuevamente.")
            }
        } else if (clase == 'fileVideo_') {
            const extensiones = ['mov', 'mp4', 'avi', 'mkv']
            id_Msg = 'msgFile-video-'+(parseInt(lessonCounter-1))
            if (id === 'video') {id_Msg = 'msgFile-video' }
            if (id === 'video_0') {id_Msg = 'msgFile-video' }
            // Si el archivo no es video
            if (!extensiones.includes(ext)) {
                fileOk = false;
                toastError("Solo se admiten videos, intentelo nuevamente.")
            }
        }
        // Funcionamiento para subir Archivos (y si es un video, debe pesar menos de 20 MB)
        if (fileOk) {
            console.log("ID MSG File OK ==> ", id_Msg)
            try {
                const fileReader = new FileReader();
                fileReader.addEventListener("load", async () => {
                    $('#'+id_Msg).html('<span class="success">Archivo cargado exitosamente...</span>');
                })
                fileReader.readAsDataURL(file);
                console.log("File Todo OK: ", file)
            } catch (error) {
                // Código que se ejecuta en caso de error
                console.log('Ha ocurrido un error:', error.message);
                toastError("Ocurrio algo inesperado al subir el archivo")
            }
        }
    }
}

function toastError(msg) {
    return toastr.warning(msg, "Error", {
        positionClass: "toast-top-full-width",
        timeOut: 5000,
        closeButton: true,
        debug: false,
        newestOnTop: true,
        progressBar: true,
        preventDuplicates: true,
        onclick: null,
        showDuration: "500",
        hideDuration: "200",
        extendedTimeOut: "400",
        showEasing: "swing",
        hideEasing: "linear",
        showMethod: "fadeIn",
        hideMethod: "fadeOut",
        tapToDismiss: false,
    });
}

</script>